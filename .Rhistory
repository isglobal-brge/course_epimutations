V2 = paste0("Less", x+10),
Boolean.operator = "==",
numeric.output = TRUE, #Output vector of 0 and 1
na.assign = "NA",
newobj =  paste0("MoreEqual", x, "Less", x+10),
datasources = connections)
})
ds.recodeValues(
var.name = "Less18",
values2replace.vector = c("0", "1"),
new.values.vector = c("0", "17"),
newobj = "Less18"
)
ds.recodeValues(
var.name = "MoreEqual18Less30",
values2replace.vector = c("0", "1"),
new.values.vector = c("0", "18"),
newobj = "MoreEqual18Less30"
)
lapply(c(30,40,50,60,70,80), function(x){
ds.recodeValues(
var.name = paste0("MoreEqual", x, "Less", x+10),
values2replace.vector = c("0", "1"),
new.values.vector = c("0", x),
newobj = paste0("MoreEqual", x, "Less", x+10)
)
})
ds.recodeValues(
var.name = "MoreEqual90",
values2replace.vector = c("0", "1"),
new.values.vector = c("0", "90"),
newobj = "MoreEqual90"
)
ds.dataFrame(
x = c("Less18", "MoreEqual18Less30",
paste0("MoreEqual", c(30,40,50,60,70,80), "Less", c(40,50,60,70,80,90)),
"MoreEqual90"),
row.names = NULL,
check.rows = FALSE,
check.names = TRUE,
stringsAsFactors = TRUE, #character variables are converted to a factor
completeCases = FALSE,
DataSHIELD.checks = FALSE,
newobj = "aggregated_encoded",
notify.of.progress = FALSE
)
ds.rowColCalc(
x = "aggregated_encoded", operation = "rowSums",
newobj = "aggregated_encoded_simp"
)
ds.asCharacter(
x.name = "aggregated_encoded_simp",
newobj = "age_range"
)
ds.recodeValues(
var.name = "age_range",
values2replace.vector = c("0"),
new.values.vector = c("NA"),
newobj = "age_range"
)
ds.colnames("data")
ds.cbind(x = c("data", "age_range"),
DataSHIELD.checks = FALSE,
newobj = "test",
datasources = connections)
ds.cbind(x = c("data", "age_range"),
DataSHIELD.checks = FALSE,
newobj = "data",
datasources = connections)
ds.colnames("data")
ds.mean("data$age_range")
ds.summary("data$age_range")
ds.table("data$age_range")
ds.table("age_range")
ds.colnames("data")
ds.summary("data$DSXIC")
emo::ji
if(NULL == "a")
{}
?shiny::req
message(ds.class("a"))
message(class("a"))
class(dt)
class(dtasdf)
?save
?saveRDS
test <- readRDS("C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/omicsplayground/toRemove2.rds")
test()
test
dt <- readRDS("C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/omicsplayground/toRemove.rds")
View(dt)
dt1 = dt[,2:ncol(dt),drop=FALSE]
dt1
label = LETTERS[1:ncol(dt1)]
colnames(dt1) = label
?withTooltip
_h2
?h2
library(DSMolgenisArmadillo)
library(DSI)
library(dsBaseClient)
library(dsOmicsClient)
token <- armadillo.get_token('http://localhost:8080')
builder <- DSI::newDSLoginBuilder()
builder$append(server = "study1", url = "http://localhost:8080",
token = token,
resource = "example/test/example",
driver="ArmadilloDriver",
profile="exposome")
logindata <- builder$build()
conns <- DSI::datashield.login(logins = logindata, assign = T,
symbol = "res")
library(DSMolgenisArmadillo)
library(DSI)
library(dsBaseClient)
library(dsOmicsClient)
token <- armadillo.get_token('http://localhost:8080')
builder <- DSI::newDSLoginBuilder()
builder$append(server = "study2", url = "https://armadillo.test.molgenis.org",
token = token,
resource = "omics/ewas/geno2",
driver="ArmadilloDriver",
profile="omics")
logindata <- builder$build()
conns <- DSI::datashield.login(logins = logindata, assign = T,
symbol = "res")
library(DSMolgenisArmadillo)
library(DSI)
library(dsBaseClient)
library(dsOmicsClient)
token <- armadillo.get_token('http://localhost:8080')
library(DSMolgenisArmadillo)
library(DSI)
library(dsBaseClient)
library(dsOmicsClient)
token <- armadillo.get_token('http://localhost:8080')
builder <- DSI::newDSLoginBuilder()
builder$append(server = "study1", url = "http://localhost:8080",
token = token,
resource = "example/test/example",
driver="ArmadilloDriver",
profile="omics")
logindata <- builder$build()
conns <- DSI::datashield.login(logins = logindata, assign = T,
symbol = "res")
DSMolgenisArmadillo::dsListPackages(conns)
DSMolgenisArmadillo::dsListPackages(conns[1])
DSMolgenisArmadillo::dsListPackages(conns[[1]])
toRemvoe4 <- readRDS("C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/omicsplayground/toRemvoe4.rds")
toRemvoe4
ggplot2::ggplot(mpg, aes(displ, hwy, colour = class)) +
ggplot2::geom_point()
ggplot2::ggplot(data.frame(dipl = 1, hwy = 1), aes(displ, hwy)) +
ggplot2::geom_point()
ggplot2::ggplot(data.frame(dipl = 1, hwy = 1), ggplot2::aes(displ, hwy)) +
ggplot2::geom_point()
ggplot2::ggplot(data.frame(displ = 1, hwy = 1), ggplot2::aes(displ, hwy)) +
ggplot2::geom_point()
function(){ggplot2::ggplot(data.frame(displ = 1, hwy = 1), ggplot2::aes(displ, hwy)) +
ggplot2::geom_point()}
library(plotly)
fig <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length)
fig
PlotModuleServer
install.packages("heatmaply")
toRemove5 <- readRDS("C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/omicsplayground/toRemove5.rds")
F1 <- toRemove5
mh = min( max(ncol(F1)*0.35, 0.8), 8)
?heatmapWithAnnot
F1 <- toRemove5
at <- 'boxplot'
at <- 'barplot'
bh=5
mh = min( max(ncol(F1)*0.35, 0.8), 8)
bm = 10 - mh
cclust <- input$FoldchangeHeatmap_cluster # T/F
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
BiocManager::install("ComplexHeatmap")
F1
heatmapWithAnnot <- function(F, anno.type=c('boxplot','barplot'),
bar.height=NULL, map.height=NULL,
row_fontsize=9, column_fontsize=9,
inset = c(-0.025,-0.1),
mar = c(0,0,0,0), legend=TRUE,
...
)
{
col1 <- 1:ncol(F)
anno.type = anno.type[1]
if(!is.null(map.height)) map.height <- grid::unit(map.height,'cm')
if(!is.null(bar.height)) bar.height <- grid::unit(bar.height,'cm')
if(anno.type=='barplot') {
ha <- ComplexHeatmap::HeatmapAnnotation(
up = ComplexHeatmap::anno_barplot(pmax(F,0.01),gp=gpar(fill=col1)),
down = ComplexHeatmap::anno_barplot(pmin(F,-0.01),gp=gpar(fill=col1)),
annotation_height = c(0.5,0.5)*bar.height,
annotation_label = c("", "")
)
} else {
ha <- ComplexHeatmap::HeatmapAnnotation(
up = ComplexHeatmap::anno_boxplot(
t(F),
gp=gpar(fill='grey80'),
outline=TRUE, size=unit(1, "mm"),
box_width = 0.75),
annotation_height = bar.height,
annotation_label = c("")
)
}
ht <- ComplexHeatmap::Heatmap(
t(F), name = "logFC",
top_annotation = ha,
row_names_gp = grid::gpar(fontsize=row_fontsize),
column_names_gp = grid::gpar(fontsize=column_fontsize),
height = map.height,
heatmap_legend_param = list(
legend_height = grid::unit(8, "mm")
)
, ...
)
ComplexHeatmap::draw(ht, padding = grid::unit(mar, "cm"),
heatmap_legend_side = "left")
if(anno.type=='boxplot') {
ComplexHeatmap::decorate_annotation("up", {
grid::grid.text("logFC",
x = grid::unit(0,"npc") - grid::unit(7,"mm"),
y = grid::unit(0.5,"npc") - grid::unit(0,"mm"),
gp = grid::gpar(fontsize=10),
rot=90, hjust = 'center')
})
}
if(anno.type=='barplot') {
ComplexHeatmap::decorate_annotation("up", {
grid::grid.text("cumulative logFC",
x = grid::unit(0,"npc") - grid::unit(7,"mm"),
y = grid::unit(0,"npc") - grid::unit(0,"mm"),
gp = grid::gpar(fontsize=10),
rot=90, hjust = 'center')
})
}
if(anno.type=='barplot' && legend) {
legend("topright",colnames(F), fill=col1,
cex=0.63, y.intersp=0.8,
inset = inset, xpd=TRUE)
}
}
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
heatmapWithAnnot <- function(F, anno.type=c('boxplot','barplot'),
bar.height=NULL, map.height=NULL,
row_fontsize=9, column_fontsize=9,
inset = c(-0.025,-0.1),
mar = c(0,0,0,0), legend=TRUE,
...
)
{
col1 <- 1:ncol(F)
anno.type = anno.type[1]
if(!is.null(map.height)) map.height <- grid::unit(map.height,'cm')
if(!is.null(bar.height)) bar.height <- grid::unit(bar.height,'cm')
if(anno.type=='barplot') {
ha <- ComplexHeatmap::HeatmapAnnotation(
up = ComplexHeatmap::anno_barplot(pmax(F,0.01),gp=grid::gpar(fill=col1)),
down = ComplexHeatmap::anno_barplot(pmin(F,-0.01),gp=grid::gpar(fill=col1)),
annotation_height = c(0.5,0.5)*bar.height,
annotation_label = c("", "")
)
} else {
ha <- ComplexHeatmap::HeatmapAnnotation(
up = ComplexHeatmap::anno_boxplot(
t(F),
gp=gpar(fill='grey80'),
outline=TRUE, size=unit(1, "mm"),
box_width = 0.75),
annotation_height = bar.height,
annotation_label = c("")
)
}
ht <- ComplexHeatmap::Heatmap(
t(F), name = "logFC",
top_annotation = ha,
row_names_gp = grid::gpar(fontsize=row_fontsize),
column_names_gp = grid::gpar(fontsize=column_fontsize),
height = map.height,
heatmap_legend_param = list(
legend_height = grid::unit(8, "mm")
)
, ...
)
ComplexHeatmap::draw(ht, padding = grid::unit(mar, "cm"),
heatmap_legend_side = "left")
if(anno.type=='boxplot') {
ComplexHeatmap::decorate_annotation("up", {
grid::grid.text("logFC",
x = grid::unit(0,"npc") - grid::unit(7,"mm"),
y = grid::unit(0.5,"npc") - grid::unit(0,"mm"),
gp = grid::gpar(fontsize=10),
rot=90, hjust = 'center')
})
}
if(anno.type=='barplot') {
ComplexHeatmap::decorate_annotation("up", {
grid::grid.text("cumulative logFC",
x = grid::unit(0,"npc") - grid::unit(7,"mm"),
y = grid::unit(0,"npc") - grid::unit(0,"mm"),
gp = grid::gpar(fontsize=10),
rot=90, hjust = 'center')
})
}
if(anno.type=='barplot' && legend) {
legend("topright",colnames(F), fill=col1,
cex=0.63, y.intersp=0.8,
inset = inset, xpd=TRUE)
}
}
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
cclust <- F
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
frame()
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
cclust <- T
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
cclust <- F
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
at <- 'barplot'
at <- 'boxplot'
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
heatmapWithAnnot <- function(F, anno.type=c('boxplot','barplot'),
bar.height=NULL, map.height=NULL,
row_fontsize=9, column_fontsize=9,
inset = c(-0.025,-0.1),
mar = c(0,0,0,0), legend=TRUE,
...
)
{
col1 <- 1:ncol(F)
anno.type = anno.type[1]
if(!is.null(map.height)) map.height <- grid::unit(map.height,'cm')
if(!is.null(bar.height)) bar.height <- grid::unit(bar.height,'cm')
if(anno.type=='barplot') {
ha <- ComplexHeatmap::HeatmapAnnotation(
up = ComplexHeatmap::anno_barplot(pmax(F,0.01),gp=grid::gpar(fill=col1)),
down = ComplexHeatmap::anno_barplot(pmin(F,-0.01),gp=grid::gpar(fill=col1)),
annotation_height = c(0.5,0.5)*bar.height,
annotation_label = c("", "")
)
} else {
ha <- ComplexHeatmap::HeatmapAnnotation(
up = ComplexHeatmap::anno_boxplot(
t(F),
gp=grid::gpar(fill='grey80'),
outline=TRUE, size=unit(1, "mm"),
box_width = 0.75),
annotation_height = bar.height,
annotation_label = c("")
)
}
ht <- ComplexHeatmap::Heatmap(
t(F), name = "logFC",
top_annotation = ha,
row_names_gp = grid::gpar(fontsize=row_fontsize),
column_names_gp = grid::gpar(fontsize=column_fontsize),
height = map.height,
heatmap_legend_param = list(
legend_height = grid::unit(8, "mm")
)
, ...
)
ComplexHeatmap::draw(ht, padding = grid::unit(mar, "cm"),
heatmap_legend_side = "left")
if(anno.type=='boxplot') {
ComplexHeatmap::decorate_annotation("up", {
grid::grid.text("logFC",
x = grid::unit(0,"npc") - grid::unit(7,"mm"),
y = grid::unit(0.5,"npc") - grid::unit(0,"mm"),
gp = grid::gpar(fontsize=10),
rot=90, hjust = 'center')
})
}
if(anno.type=='barplot') {
ComplexHeatmap::decorate_annotation("up", {
grid::grid.text("cumulative logFC",
x = grid::unit(0,"npc") - grid::unit(7,"mm"),
y = grid::unit(0,"npc") - grid::unit(0,"mm"),
gp = grid::gpar(fontsize=10),
rot=90, hjust = 'center')
})
}
if(anno.type=='barplot' && legend) {
legend("topright",colnames(F), fill=col1,
cex=0.63, y.intersp=0.8,
inset = inset, xpd=TRUE)
}
}
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
cclust <- T
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
cclust <- F
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
at <- 'barplot'
cclust <- T
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
cclust <- F
heatmapWithAnnot(
F1, anno.type=at,
bar.height=bh, map.height=mh,
mar = c(bm,0.5,0.5,1),
cluster_columns = cclust,
inset = c(0.01,0.01))
knitr::purl("C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/course_epimutations/epimutacions_cast.Rmd")
?knitr::purl("C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/course_epimutations/epimutacions_cast.Rmd")
?knitr::purl("C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/course_epimutations/epimutacions_cast.Rmd", "C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/course_epimutations/epimutacions_cast.R")
knitr::purl("C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/course_epimutations/epimutacions_cast.Rmd", "C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/course_epimutations/epimutacions_cast.R")
setwd("C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/course_epimutations")
pkgdown::build_site()
usethis::create_package()
usethis::create_package("C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/course_epimutations")
usethis::use_description()
?usethis::create_package("C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/course_epimutations")
usethis::create_package("C:/Users/Xavier/OneDrive/ISGlobal/PhD/GitHub/course_epimutations", check_name = F)
getwd)=
getwd()
pkgdown::build_site()
usethis::use_citation()
usethis::use_citation()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
